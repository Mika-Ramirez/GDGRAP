#include <GLFW/glfw3.h>
#include <cmath>

#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif

int main(void)
{
    GLFWwindow* window;

    /* Initialize the library */
    if (!glfwInit())
        return -1;

    /* Create a windowed mode window and its OpenGL context */
    window = glfwCreateWindow(800, 800, "Ramirez, Catrina Mikaela", NULL, NULL);
    if (!window)
    {
        glfwTerminate();
        return -1;
    }

    /* Make the window's context current */
    glfwMakeContextCurrent(window);

    
    int n = 5;

    /* Loop until the user closes the window */
    while (!glfwWindowShouldClose(window))
    {
        /* Render here */
        glClear(GL_COLOR_BUFFER_BIT);

        float radius = 0.5f;  

        float angleIncrement = 360.0f / n;  
        angleIncrement *= M_PI / 180.0f;    

        glBegin(GL_POLYGON);
        float angle = 0.0f;
        for (int k = 0; k < n; ++k) {
            glVertex3f(radius * cos(angle), radius * sin(angle), 0.0f);
            angle += angleIncrement;
        }
        glEnd();

        /* Swap front and back buffers */
        glfwSwapBuffers(window);

        /* Poll for and process events */
        glfwPollEvents();
    }

    glfwTerminate();
    return 0;
}
